{"ast":null,"code":"export default {\n  name: 'Calculator',\n  data() {\n    return {\n      expression: '',\n      currNum: '',\n      firstOperand: '',\n      secondOperand: '',\n      opertion: '',\n      operator: false,\n      operatorDone: false\n    };\n  },\n  methods: {\n    clear() {\n      this.expression = '';\n      this.currNum = '';\n      console.log('clear');\n    },\n    deleting() {\n      this.currNum = this.currNum.slice(0, -1);\n      console.log('deleting');\n    },\n    appendNum(num) {\n      if (this.currNum === 'E') this.clear();\n      if (num === '.' && this.currNum.includes('.')) return;\n      if (this.currNum === '0') this.deleting();\n      if (num === '.' && this.currNum === '') this.currNum = '0';\n      this.currNum += num;\n      console.log('appendNum' + num);\n    },\n    singleOperation(op) {\n      if (this.currNum !== '' && this.currNum !== 'E') {\n        console.log('singleOperation: ' + op);\n        fetch(`http://localhost:8081/` + op + `/` + this.currNum, {\n          method: 'get'\n        }).then(res => {\n          return res.text();\n        }).then(data => {\n          this.currNum = data;\n        });\n      }\n    },\n    doubleOperation(op, opSymbol) {\n      if (this.currNum === '' || this.currNum === 'E') return;\n      if (!this.operator) {\n        this.firstOperand = this.currNum;\n        this.expression = this.expression + ' ' + this.firstOperand + ' ' + opSymbol;\n        this.operator = op;\n        this.currNum = '';\n        console.log('doubleOperation: ' + op);\n      } else {\n        this.secondOperand = this.currNum;\n        fetch(`http://localhost:8081/` + this.firstOperand + `/` + this.operator + `/` + this.secondOperand, {\n          method: 'get'\n        }).then(res => {\n          return res.text();\n        }).then(data => {\n          this.currNum = data;\n        });\n        this.operator = false;\n        this.operatorDone = true;\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","expression","currNum","firstOperand","secondOperand","opertion","operator","operatorDone","methods","clear","console","log","deleting","slice","appendNum","num","includes","singleOperation","op","fetch","method","then","res","text","doubleOperation","opSymbol"],"sources":["D:\\Term 5\\Programming 2\\Labs\\Lab 2\\simple-calculator\\src\\components\\Calculator.vue"],"sourcesContent":["<template>\r\n    <div class=\"Calculator\">\r\n        <div class=\"screen\">\r\n            <div id=\"top\">{{ expression }}</div>\r\n            <div id=\"bottom\">{{ currNum }}</div>\r\n        </div>\r\n        <button @click=\"\">%</button>\r\n        <button @click=\"clear\">CE</button>\r\n        <button @click=\"clear\">C</button>\r\n        <button @click=\"deleting\">&#9003</button>\r\n        <button @click=\"singleOperation('fraction')\">1/x</button>\r\n        <button @click=\"singleOperation('square')\">x²</button>\r\n        <button @click=\"singleOperation('squareRoot')\">√x</button>\r\n        <button @click=\"doubleOperation('divide','÷')\">÷</button>\r\n        <button @click=\"appendNum('7')\">7</button>\r\n        <button @click=\"appendNum('8')\">8</button>\r\n        <button @click=\"appendNum('9')\">9</button>\r\n        <button @click=\"\">x</button>\r\n        <button @click=\"appendNum('4')\">4</button>\r\n        <button @click=\"appendNum('5')\">5</button>\r\n        <button @click=\"appendNum('6')\">6</button>\r\n        <button @click=\"\">-</button>\r\n        <button @click=\"appendNum('1')\">1</button>\r\n        <button @click=\"appendNum('2')\">2</button>\r\n        <button @click=\"appendNum('3')\">3</button>\r\n        <button @click=\"\">+</button>\r\n        <button @click=\"singleOperation('negate')\">+/-</button>\r\n        <button @click=\"appendNum('0')\">0</button>\r\n        <button @click=\"appendNum('.')\">.</button>\r\n        <button @click=\"\">=</button>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: 'Calculator',\r\n    data() {\r\n        return {\r\n            expression: '',\r\n            currNum: '',\r\n            firstOperand: '',\r\n            secondOperand: '',\r\n            opertion: '',\r\n            operator: false,\r\n            operatorDone: false,\r\n        }\r\n    },\r\n    methods: {\r\n        clear() {\r\n            this.expression = '';\r\n            this.currNum = '';\r\n            console.log('clear');\r\n        },\r\n        deleting() {\r\n            this.currNum = this.currNum.slice(0, -1);\r\n            console.log('deleting');\r\n        },\r\n        appendNum(num) {\r\n            if(this.currNum==='E') this.clear();\r\n            if (num === '.' && this.currNum.includes('.')) return;\r\n            \r\n            if (this.currNum === '0') this.deleting();\r\n            if (num === '.' && this.currNum === '') this.currNum = '0';\r\n            this.currNum += num;\r\n            console.log('appendNum'+num);\r\n        },\r\n\r\n        singleOperation(op) {\r\n            if (this.currNum !== '' && this.currNum !== 'E') {\r\n                console.log('singleOperation: '+op);\r\n                fetch(`http://localhost:8081/`+op+`/`+this.currNum, {\r\n                    method: 'get',\r\n                }).then(res => {\r\n                    return res.text();\r\n                }).then(data => {\r\n                    this.currNum = data;\r\n                });\r\n            }\r\n        },\r\n        doubleOperation(op,opSymbol) {\r\n            if (this.currNum === '' || this.currNum === 'E') return;\r\n            if (!this.operator) {\r\n                this.firstOperand = this.currNum;\r\n                this.expression = this.expression + ' ' + this.firstOperand + ' ' + opSymbol;\r\n                this.operator = op;\r\n                this.currNum = '';\r\n                console.log('doubleOperation: '+op);\r\n            } else {\r\n                this.secondOperand = this.currNum;\r\n                fetch(`http://localhost:8081/`+this.firstOperand+`/`+this.operator+`/`+this.secondOperand, {\r\n                    method: 'get',\r\n                }).then(res => {\r\n                    return res.text();\r\n                }).then(data => {\r\n                    this.currNum = data;\r\n                });\r\n                this.operator = false;\r\n                this.operatorDone = true;\r\n            }\r\n        },\r\n    },\r\n}\r\n</script>\r\n\r\n<style>\r\n    .Calculator {\r\n        \r\n        display: grid;\r\n        grid-template-columns: repeat(4, 1fr);\r\n        grid-auto-rows: minmax(50px, auto);\r\n        grid-gap: 5px;\r\n        padding: 40px 20px 20px 20px;\r\n        border: 1px solid black;\r\n        border-radius: 20px;\r\n        width: 300px;\r\n        background-color: rgb(0, 0, 0);\r\n    }\r\n    .screen {\r\n        display: flex;\r\n        flex-direction: column;\r\n        grid-column: 1 / -1;\r\n        grid-row: 1 / 3;\r\n        border: 1px solid black;\r\n        border-radius: 10px;\r\n        margin-bottom: 5px;\r\n        text-align: right;\r\n        background-color: rgb(70, 68, 72);\r\n    }\r\n    #top {\r\n        flex: 1.5;\r\n        padding: 5px 10px 0px 10px;\r\n        text-align: left;\r\n        font-size: 1.5em;\r\n    }\r\n    #bottom {\r\n        flex: 2;\r\n        font-size: 2em;\r\n        color: whitesmoke;\r\n        padding: 0 10px;\r\n    }\r\n    button {\r\n        border: 1px solid black;\r\n        border-radius: 10px;\r\n        padding: 5px;\r\n        font-size: 1.5em;\r\n        \r\n    }\r\n    button:hover {\r\n        background-color: lightgray;\r\n        cursor: pointer;\r\n    }\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}