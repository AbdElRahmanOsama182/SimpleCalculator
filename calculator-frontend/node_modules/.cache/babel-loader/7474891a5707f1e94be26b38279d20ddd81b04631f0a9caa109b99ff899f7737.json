{"ast":null,"code":"export default {\n  name: 'Calculator',\n  data() {\n    return {\n      expression: '',\n      currNum: '',\n      firstOperand: '',\n      secondOperand: '',\n      opertion: '',\n      operator: false,\n      operatorDone: false,\n      done: false,\n      prevSingle: false,\n      temp: ''\n    };\n  },\n  methods: {\n    clear() {\n      this.expression = '';\n      this.currNum = '';\n      this.firstOperand = '';\n      this.secondOperand = '';\n      this.opertion = '';\n      this.operator = false;\n      this.operatorDone = false;\n      this.prevSingle = false;\n      this.done = false;\n      console.log('clear');\n    },\n    deleting() {\n      if (this.currNum === 'E' || this.done) {\n        this.clear();\n      }\n      if (this.expression.endsWith('+') || this.expression.endsWith('-') || this.expression.endsWith('x') || this.expression.endsWith('÷')) {\n        this.temp = this.firstOperand;\n        this.clear();\n        this.currNum = this.temp;\n      } else this.currNum = this.currNum.slice(0, -1);\n      console.log('deleting');\n    },\n    appendNum(num) {\n      if (this.currNum === 'E') this.clear();\n      if (this.done || this.prevSingle) {\n        this.clear();\n      }\n      if (this.operatorDone) {\n        this.firstOperand = this.currNum;\n        this.currNum = '';\n        this.operatorDone = false;\n      }\n      if (num === '.' && this.currNum.includes('.')) return;\n      if (this.currNum === '0') this.deleting();\n      if (num === '.' && this.currNum === '') this.currNum = '0';\n      this.currNum += num;\n      console.log('appendNum' + num);\n    },\n    async singleOperation(op) {\n      if (this.currNum !== '' && this.currNum !== 'E' && !this.operatorDone) {\n        console.log('singleOperation: ' + op);\n        await fetch(`http://localhost:8081/` + op + `/` + this.currNum, {\n          method: 'get'\n        }).then(res => {\n          return res.text();\n        }).then(data => {\n          this.currNum = data;\n        });\n        if (this.done) {\n          this.temp = this.currNum;\n          this.clear();\n          this.currNum = this.temp;\n        }\n        this.prevSingle = true;\n      }\n    },\n    async doubleOperation(op, opSymbol) {\n      if (this.currNum === '' || this.currNum === 'E') return;\n      if (this.done) {\n        this.temp = this.currNum;\n        this.clear();\n        this.currNum = this.temp;\n      }\n      if (!this.operator) {\n        this.prevSingle = false;\n        this.firstOperand = this.currNum;\n        this.expression = this.expression + ' ' + this.firstOperand + ' ' + opSymbol;\n        this.opertion = op;\n        this.operator = true;\n        this.currNum = '';\n        console.log('doubleOperation: ' + op);\n      } else if (!this.operatorDone) {\n        this.prevSingle = false;\n        this.secondOperand = this.currNum;\n        await fetch(`http://localhost:8081/` + this.firstOperand + `/` + this.opertion + `/` + this.secondOperand, {\n          method: 'get'\n        }).then(res => {\n          return res.text();\n        }).then(data => {\n          this.currNum = data;\n        });\n        if (this.currNum !== 'E') {\n          this.expression = this.expression + ' ' + this.secondOperand + ' ' + opSymbol;\n        } else {\n          this.expression = this.expression + ' ' + this.secondOperand;\n        }\n        this.firstOperand = this.currNum;\n        this.opertion = op;\n        this.operator = true;\n        this.operatorDone = true;\n      }\n    },\n    equal() {\n      if (!this.done && this.currNum !== '' && this.currNum !== 'E' && !this.operatorDone) {\n        if (this.operator) {\n          this.secondOperand = this.currNum;\n          this.expression = this.expression + ' ' + this.secondOperand;\n          fetch(`http://localhost:8081/` + this.firstOperand + `/` + this.opertion + `/` + this.secondOperand, {\n            method: 'get'\n          }).then(res => {\n            return res.text();\n          }).then(data => {\n            this.currNum = data;\n          });\n        }\n        this.done = true;\n        console.log('equal');\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","expression","currNum","firstOperand","secondOperand","opertion","operator","operatorDone","done","prevSingle","temp","methods","clear","console","log","deleting","endsWith","slice","appendNum","num","includes","singleOperation","op","fetch","method","then","res","text","doubleOperation","opSymbol","equal"],"sources":["D:\\Term 5\\Programming 2\\Labs\\Lab 2\\simple-calculator\\src\\components\\Calculator.vue"],"sourcesContent":["<template>\r\n    <div class=\"Calculator\">\r\n        <div class=\"screen\">\r\n            <div id=\"top\">{{ expression }}</div>\r\n            <div id=\"bottom\">{{ currNum }}</div>\r\n        </div>\r\n        <button @click=\"singleOperation('percent')\" class=\"opBtn\">%</button>\r\n        <button @click=\"clear\" class=\"opBtn\">CE</button>\r\n        <button @click=\"clear\" class=\"opBtn\">C</button>\r\n        <button @click=\"deleting\" class=\"opBtn\">&#9003</button>\r\n        <button @click=\"singleOperation('fraction')\" class=\"opBtn\">1/x</button>\r\n        <button @click=\"singleOperation('square')\" class=\"opBtn\"> x²</button>\r\n        <button @click=\"singleOperation('squareRoot')\" class=\"opBtn\">√x</button>\r\n        <button @click=\"doubleOperation('divide','÷')\" class=\"opBtn\">÷</button>\r\n        <button @click=\"appendNum('7')\">7</button>\r\n        <button @click=\"appendNum('8')\">8</button>\r\n        <button @click=\"appendNum('9')\">9</button>\r\n        <button @click=\"doubleOperation('multiply','x')\" class=\"opBtn\">x</button>\r\n        <button @click=\"appendNum('4')\">4</button>\r\n        <button @click=\"appendNum('5')\">5</button>\r\n        <button @click=\"appendNum('6')\">6</button>\r\n        <button @click=\"doubleOperation('subtract','-')\" class=\"opBtn\">-</button>\r\n        <button @click=\"appendNum('1')\">1</button>\r\n        <button @click=\"appendNum('2')\">2</button>\r\n        <button @click=\"appendNum('3')\">3</button>\r\n        <button @click=\"doubleOperation('add','+')\" class=\"opBtn\">+</button>\r\n        <button @click=\"singleOperation('negate')\">+/-</button>\r\n        <button @click=\"appendNum('0')\">0</button>\r\n        <button @click=\"appendNum('.')\">.</button>\r\n        <button @click=\"equal\" class=\"opBtn\">=</button>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: 'Calculator',\r\n    data() {\r\n        return {\r\n            expression: '',\r\n            currNum: '',\r\n            firstOperand: '',\r\n            secondOperand: '',\r\n            opertion: '',\r\n            operator: false,\r\n            operatorDone: false,\r\n            done: false,\r\n            prevSingle: false,\r\n            temp: '',\r\n        }\r\n    },\r\n    methods: {\r\n        clear() {\r\n            this.expression = '';\r\n            this.currNum = '';\r\n            this.firstOperand = '';\r\n            this.secondOperand = '';\r\n            this.opertion = '';\r\n            this.operator = false;\r\n            this.operatorDone = false;\r\n            this.prevSingle = false;\r\n            this.done = false;\r\n            console.log('clear');\r\n        },\r\n        deleting() {\r\n            if(this.currNum==='E' || this.done){\r\n                this.clear();\r\n            } \r\n            if (this.expression.endsWith('+') || this.expression.endsWith('-') || this.expression.endsWith('x') || this.expression.endsWith('÷')) {\r\n                this.temp = this.firstOperand;\r\n                this.clear();\r\n                this.currNum = this.temp;\r\n            }\r\n            else this.currNum = this.currNum.slice(0, -1);\r\n            console.log('deleting');\r\n        },\r\n        appendNum(num) {\r\n            if(this.currNum==='E') this.clear();\r\n            if(this.done||this.prevSingle) {\r\n                this.clear();\r\n            }\r\n            if(this.operatorDone) {\r\n                this.firstOperand = this.currNum;\r\n                this.currNum = '';\r\n                this.operatorDone = false;\r\n            }\r\n            if (num === '.' && this.currNum.includes('.')) return;\r\n            \r\n            if (this.currNum === '0') this.deleting();\r\n            if (num === '.' && this.currNum === '') this.currNum = '0';\r\n            this.currNum += num;\r\n            console.log('appendNum'+num);\r\n        },\r\n\r\n        async singleOperation(op) {\r\n            if (this.currNum !== '' && this.currNum !== 'E' && !this.operatorDone) {\r\n                console.log('singleOperation: '+op);\r\n                await fetch(`http://localhost:8081/`+op+`/`+this.currNum, {\r\n                    method: 'get',\r\n                }).then(res => {\r\n                    return res.text();\r\n                }).then(data => {\r\n                    this.currNum = data;\r\n                });\r\n                if (this.done) {\r\n                    this.temp = this.currNum;\r\n                    this.clear();\r\n                    this.currNum = this.temp;\r\n                }\r\n                this.prevSingle = true;\r\n            }\r\n        },\r\n        async doubleOperation(op,opSymbol) {\r\n            if (this.currNum === '' || this.currNum === 'E') return;\r\n            if (this.done) {\r\n                this.temp = this.currNum;\r\n                this.clear();\r\n                this.currNum = this.temp;\r\n            }\r\n            if (!this.operator) {\r\n                this.prevSingle = false;\r\n                this.firstOperand = this.currNum;\r\n                this.expression = this.expression + ' ' + this.firstOperand + ' ' + opSymbol;\r\n                this.opertion = op;\r\n                this.operator = true;\r\n                this.currNum = '';\r\n                console.log('doubleOperation: '+op);\r\n            } else if (!this.operatorDone){\r\n                this.prevSingle = false;\r\n                this.secondOperand = this.currNum;\r\n\r\n                await fetch(`http://localhost:8081/`+this.firstOperand+`/`+this.opertion+`/`+this.secondOperand, {\r\n                    method: 'get',\r\n                }).then(res => {\r\n                    return res.text();\r\n                }).then(data => {\r\n                    this.currNum = data;\r\n                });\r\n                if (this.currNum !== 'E') {\r\n                    this.expression = this.expression + ' ' + this.secondOperand + ' ' + opSymbol;\r\n                }\r\n                else {\r\n                    this.expression = this.expression + ' ' + this.secondOperand;\r\n                }\r\n                this.firstOperand = this.currNum;\r\n                this.opertion = op;\r\n                this.operator = true;\r\n                this.operatorDone = true;\r\n            }\r\n        },\r\n        equal(){\r\n            if (!this.done && this.currNum !== '' && this.currNum !== 'E' && !this.operatorDone) {\r\n                if (this.operator) {\r\n                    this.secondOperand = this.currNum;\r\n                    this.expression = this.expression + ' ' + this.secondOperand;\r\n                    fetch(`http://localhost:8081/`+this.firstOperand+`/`+this.opertion+`/`+this.secondOperand, {\r\n                        method: 'get',\r\n                    }).then(res => {\r\n                        return res.text();\r\n                    }).then(data => {\r\n                        this.currNum = data;\r\n                    });\r\n                }\r\n                this.done = true;\r\n                console.log('equal');\r\n            }\r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<style>\r\n    .Calculator {\r\n        \r\n        display: grid;\r\n        grid-template-columns: repeat(4, 1fr);\r\n        grid-auto-rows: minmax(50px, auto);\r\n        grid-gap: 5px;\r\n        padding: 40px 20px 20px 20px;\r\n        border: 1px solid black;\r\n        border-radius: 20px;\r\n        width: 300px;\r\n        background-color: rgb(0, 0, 0);\r\n    }\r\n    .screen {\r\n        display: flex;\r\n        flex-direction: column;\r\n        grid-column: 1 / -1;\r\n        grid-row: 1 / 3;\r\n        border: 5px solid rgb(43, 42, 44);\r\n        border-radius: 10px;\r\n        margin-bottom: 10px;\r\n        text-align: right;\r\n        background-color: rgb(78, 77, 80);\r\n        word-wrap: break-word;\r\n    }\r\n\r\n    #top {\r\n        flex: 1.5;\r\n        padding: 5px 10px 0px 10px;\r\n        text-align: left;\r\n        font-size: 1.5em;\r\n    }\r\n    #bottom {\r\n        flex: 2;\r\n        font-size: 2em;\r\n        color: whitesmoke;\r\n        padding: 0 10px;\r\n    }\r\n    .opBtn {\r\n        background-color: rgb(39, 97, 151);\r\n    }\r\n    .opBtn:hover {\r\n        background-color: rgba(223, 123, 0, 0.853);\r\n    }\r\n    button {\r\n        border: 5px solid rgb(43, 42, 44);\r\n        border-radius: 10px;\r\n        padding: 5px;\r\n        font-size: 1.5em;\r\n    }\r\n    \r\n    button:hover {\r\n        background-color: lightgray;\r\n        cursor: pointer;\r\n    }\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}